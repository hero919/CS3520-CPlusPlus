/*
 * BinaryTree.cpp
 *
 *  Created on: Feb 7, 2017
 *      Author: zeqingzhang
 */

#include "BinaryTree.h"
using namespace std;
using namespace hw04;

//Initialize the constructor
BinaryTree::BinaryTree(const string s, const int weight) : text_(s), weight_(weight){

}



//Initialize the constructor
BinaryTree::BinaryTree(const BinaryTree& left,const BinaryTree& right){
	vector_.push_back(left);
	vector_.push_back(right);
}


void BinaryTree::printTree(std::ostream& output) const{
	if(vector_.size() == 0){
		output << text_;
	}else{
		output << "(";
		vector_.at(0).printTree(output);
		output<< " ";
		vector_.at(1).printTree(output);
		output << ")";
	}
}

std::string BinaryTree::get(std::string::iterator&  iter, const std::string::iterator end) const{
	const BinaryTree* root = this;

	while(iter != end){
		if(((*iter) == 'A' || (*iter) == 'L')){
			root = &(root->vector_.at(0));
			if(root -> vector_.size() == 0){
				iter++;
				return root->text_;
			}
			iter++;
			continue;
		}

		 if(((*iter) == 'D' || (*iter) == 'R')){
			root = &(root->vector_.at(1));
			if(root -> vector_.size() == 0){
				iter++;
				return root->text_;
			}
			iter++;
			continue;
		}
	}
	return "";
}
