/*
 * Musician.cpp
 *
 *  Created on: Mar 15, 2017
 *      Author: zeqingzhang
 */

#include "Band.h"
#include "Musician.h"
#include <algorithm>
#include <functional>
#include <unordered_map>
#include <iostream>
#include <set>
#include <map>


using namespace std;
using namespace hw07;



Musician::Musician(/** The name of the musician. */
           const std::string& name):name_(name){

}

  /**
   * Destructor.
   */
Musician::~Musician(){
	cout << "Musician " << name_ << " is being deleted" << endl;
}

  /**
   * The name of the musician.
   * @return The musician name.
   */
  std::string Musician::getName() const noexcept{
	  return name_;
  }

  /**
   * Add a musician to a band.
   */
  void Musician::add(/** The band that the musician is joining. */
           std::shared_ptr<Band> band) noexcept{
	  	band.get()->add(shared_from_this());
  }

  /**
   * Remove a musician from a band.
   */
  void Musician::remove(/** The band that the musician is leaving. */
              std::shared_ptr<Band> band) noexcept{
	 band.get()->remove(shared_from_this());
  }

  /**
   * Determine whether a musician is in a band.
   * @return True if the musician is in the specified band.
   */
  bool Musician::isMember(/** The band that is being queried. */
		std::shared_ptr<Band> band) noexcept{
	  return band.get()->hasMember(shared_from_this());
  }
