/*
 * Band.cpp
 *
 *  Created on: Mar 15, 2017
 *      Author: zeqingzhang
 */

#include "Band.h"
#include <algorithm>
#include <functional>
#include <unordered_map>
#include <iostream>
#include <set>
#include <map>


using namespace std;
using namespace hw07;


Band::Band(const string& name):name_(name){

}



Band::~Band(){
	cout <<"Band "<< name_ << "is being deleted"<< endl;
}


std::string Band::getName() const noexcept{
	return name_;
}



void Band::add(std::shared_ptr<Musician> musician) noexcept{
	members_.insert(musician);
}


void Band::remove(std::shared_ptr<Musician> musician) noexcept{
	if(!musician){
		return;
	}

	for(auto i = members_.begin(); i != members_.end(); i++){
			if(i && (i->get() == musician.get())){
				members_.erase(*i);
			}
	}
}


bool Band::hasMember(/** The musician that is being queried. */
		 std::shared_ptr<Musician> musician) noexcept{
	if(!musician){
		return false;
	}


	return members_.find(musician) != members_.end();
}




void Band::print(/** The output stream to which the information is to be printed. */
	     std::ostream& out) const noexcept{
	out << "Band" << " " << name_ << endl;
	string comma = "";
	for(auto i = members_.begin(); i != members_.end(); i++){
			if(i){
				out << i->get()->getName();
				comma = ",";
			}

	}
}


